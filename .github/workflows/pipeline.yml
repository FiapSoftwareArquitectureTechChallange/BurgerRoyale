name: Pipeline

on:
  push:
    branches: [ "main", "develop", "pipeline-2"]
  pull_request:
    branches: [ "main", "develop"]
  
env:
  EKS_CLUSTER_NAME: burgerroyale-k8s
  AWS_REGION: us-east-1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET 7
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x
      
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Unit Tests
      run: |
        cd tests/BurgerRoyale.UnitTests
        dotnet test
        
  publishImage:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_RAFFA }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_RAFFA }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_RAFFA }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: burgerroyale
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deployToEKs:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: publishImage

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_RAFFA }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_RAFFA }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_RAFFA }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Replace variables in Kubernetes manifest
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_URI: ${{ steps.login-ecr.outputs.registry }}/burgerroyale:lastest
        DB_ADDRESS: ${{ secrets.DB_ADDRESS }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
      run: |
        cd Kubernetes
        sed -i 's/\${DB_ADDRESS}/'"${{ secrets.DB_ADDRESS }}"'/g' api-deployment.yaml

    - name: Deploy to EKS
      run: |
        cd Kubernetes
        kubectl apply -f api-deployment.yaml
        kubectl apply -f api-svc.yaml     